// Generated by view binder compiler. Do not edit!
package com.android.sheguard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.sheguard.R;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewHelplineListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final MaterialTextView details;

  @NonNull
  public final MaterialTextView detailsTitle;

  @NonNull
  public final MaterialTextView name;

  @NonNull
  public final MaterialTextView nameTitle;

  @NonNull
  public final MaterialTextView number;

  @NonNull
  public final MaterialTextView numberTitle;

  private ViewHelplineListItemBinding(@NonNull ConstraintLayout rootView, @NonNull Barrier barrier,
      @NonNull MaterialTextView details, @NonNull MaterialTextView detailsTitle,
      @NonNull MaterialTextView name, @NonNull MaterialTextView nameTitle,
      @NonNull MaterialTextView number, @NonNull MaterialTextView numberTitle) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.details = details;
    this.detailsTitle = detailsTitle;
    this.name = name;
    this.nameTitle = nameTitle;
    this.number = number;
    this.numberTitle = numberTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewHelplineListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewHelplineListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_helpline_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewHelplineListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = ViewBindings.findChildViewById(rootView, id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.details;
      MaterialTextView details = ViewBindings.findChildViewById(rootView, id);
      if (details == null) {
        break missingId;
      }

      id = R.id.details_title;
      MaterialTextView detailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailsTitle == null) {
        break missingId;
      }

      id = R.id.name;
      MaterialTextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_title;
      MaterialTextView nameTitle = ViewBindings.findChildViewById(rootView, id);
      if (nameTitle == null) {
        break missingId;
      }

      id = R.id.number;
      MaterialTextView number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.number_title;
      MaterialTextView numberTitle = ViewBindings.findChildViewById(rootView, id);
      if (numberTitle == null) {
        break missingId;
      }

      return new ViewHelplineListItemBinding((ConstraintLayout) rootView, barrier, details,
          detailsTitle, name, nameTitle, number, numberTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
