// Generated by view binder compiler. Do not edit!
package com.android.sheguard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.sheguard.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnEditProfile;

  @NonNull
  public final ViewHeaderExpandableBinding header;

  @NonNull
  public final MaterialTextView tvBlood;

  @NonNull
  public final MaterialTextView tvEmail;

  @NonNull
  public final MaterialTextView tvLocation;

  @NonNull
  public final MaterialTextView tvName;

  @NonNull
  public final MaterialTextView tvPhone;

  private FragmentProfileBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnEditProfile, @NonNull ViewHeaderExpandableBinding header,
      @NonNull MaterialTextView tvBlood, @NonNull MaterialTextView tvEmail,
      @NonNull MaterialTextView tvLocation, @NonNull MaterialTextView tvName,
      @NonNull MaterialTextView tvPhone) {
    this.rootView = rootView;
    this.btnEditProfile = btnEditProfile;
    this.header = header;
    this.tvBlood = tvBlood;
    this.tvEmail = tvEmail;
    this.tvLocation = tvLocation;
    this.tvName = tvName;
    this.tvPhone = tvPhone;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_edit_profile;
      MaterialButton btnEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnEditProfile == null) {
        break missingId;
      }

      id = R.id.header;
      View header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }
      ViewHeaderExpandableBinding binding_header = ViewHeaderExpandableBinding.bind(header);

      id = R.id.tv_blood;
      MaterialTextView tvBlood = ViewBindings.findChildViewById(rootView, id);
      if (tvBlood == null) {
        break missingId;
      }

      id = R.id.tv_email;
      MaterialTextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tv_location;
      MaterialTextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tv_name;
      MaterialTextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_phone;
      MaterialTextView tvPhone = ViewBindings.findChildViewById(rootView, id);
      if (tvPhone == null) {
        break missingId;
      }

      return new FragmentProfileBinding((CoordinatorLayout) rootView, btnEditProfile,
          binding_header, tvBlood, tvEmail, tvLocation, tvName, tvPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
